{"version":3,"sources":["pages/Login.js","actions/index.js","components/FormInput.js","components/Table.js","pages/Wallet.js","pages/NotFound.js","App.js","reducers/user.js","reducers/wallet.js","reducers/index.js","store/index.js","index.js"],"names":["Login","props","onButtonClick","bind","e","preventDefault","this","history","DispUpdateEmail","emailInput","push","passwordInput","isLoginDisabled","onInputChange","data-testid","type","name","placeholder","value","onChange","disabled","onClick","React","Component","updateExpenses","state","exchange","payload","exchangeRates","updateExpensesAfterDelete","fetchCoins","dispatch","fetch","then","response","json","result","Object","keys","filter","key","includes","fetchCurrency","a","console","log","FormInput","onFormChange","onFormButtonClick","id","description","currency","method","tag","target","setState","prevState","coinsListed","isEditing","endEditClick","htmlFor","map","coin","item","each","connect","wallet","currencies","prevExpenses","expenses","Table","adjustCurrencyName","split","adjustValue","parseFloat","toFixed","adjustCurrency","Math","round","adjustExpenseTotal","onDeleteButtonClick","disUpdateExpensesAfterDelete","updatedList","expense","Number","onEditButtonClick","ask","Wallet","updateTotalField","atualCurrency","whoIsEditing","timesUpdated","disFetchCoins","input","valueAdded","reduce","acc","cur","floor","emailUser","user","email","NotFound","App","validateEmail","loginReady","test","length","exact","path","render","component","updateEmail","INITIAL_STATE_USER","INITIAL_STATE_WALLET","reducer","combineReducers","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.f0251115.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onButtonClick = this.onButtonClick.bind(this);\n  }\n\n  onButtonClick(e) {\n    e.preventDefault();\n    const { history, DispUpdateEmail, emailInput } = this.props;\n    DispUpdateEmail(emailInput);\n    history.push('/carteira');\n  }\n\n  render() {\n    const {\n      emailInput,\n      passwordInput,\n      isLoginDisabled,\n      onInputChange,\n    } = this.props;\n\n    return (\n      <section>\n        <input\n          data-testid=\"email-input\"\n          type=\"email\"\n          name=\"emailInput\"\n          placeholder=\"Email\"\n          value={ emailInput }\n          onChange={ onInputChange }\n        />\n        <input\n          data-testid=\"password-input\"\n          type=\"password\"\n          name=\"passwordInput\"\n          placeholder=\"Password\"\n          value={ passwordInput }\n          onChange={ onInputChange }\n        />\n        <button\n          type=\"submit\"\n          name=\"button\"\n          disabled={ isLoginDisabled }\n          onClick={ this.onButtonClick }\n        >\n          Entrar\n        </button>\n      </section>\n    );\n  }\n}\n\nLogin.propTypes = {\n  emailInput: PropTypes.string.isRequired,\n  passwordInput: PropTypes.string.isRequired,\n  isLoginDisabled: PropTypes.bool.isRequired,\n  onInputChange: PropTypes.func.isRequired,\n  DispUpdateEmail: PropTypes.func.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n};\n\nexport default Login;\n","export const USER_ACTION = 'USER_ACTION';\nexport const WALLET_ACTION = 'WALLET_ACTION';\nexport const FORM_ACTION = 'FORM_ACTION';\nexport const DELETE_ACTION = 'DELETE_ACTION';\n\nexport const updateEmail = (state) => ({\n  type: USER_ACTION,\n  email: state,\n});\n\nexport const updateWallet = (state) => ({\n  type: WALLET_ACTION,\n  payload: [...state],\n});\n\nexport const updateExpenses = (state, exchange) => ({\n  type: FORM_ACTION,\n  payload: {\n    ...state,\n    exchangeRates: exchange,\n  },\n});\n\nexport const updateExpensesAfterDelete = (state) => ({\n  type: DELETE_ACTION,\n  payload: state,\n});\n\n// Código extraido de https://masteringjs.io/tutorials/fundamentals/filter-key#:~:text=JavaScript%20objects%20don't%20have,()%20function%20as%20shown%20below.\nexport function fetchCoins() {\n  return (dispatch) => fetch('https://economia.awesomeapi.com.br/json/all')\n    .then((response) => response.json())\n    .then((result) => dispatch(updateWallet(Object.keys(result)\n      .filter((key) => !key.includes('USDT')))));\n}\n\nexport function fetchCurrency(state) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch('https://economia.awesomeapi.com.br/json/all');\n      const exchange = await response.json();\n      dispatch(updateExpenses(state, exchange));\n    } catch (e) {\n      console.log(e);\n    }\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { fetchCurrency } from '../actions/index';\n\nclass FormInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onFormChange = this.onFormChange.bind(this);\n    this.onFormButtonClick = this.onFormButtonClick.bind(this);\n    this.state = {\n      id: 0,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: 'Dinheiro',\n      tag: 'Alimentação',\n    };\n  }\n\n  onFormChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  }\n\n  async onFormButtonClick(e) {\n    e.preventDefault();\n    const { dispatch } = this.props;\n    await dispatch(fetchCurrency(this.state));\n    this.setState((prevState) => ({\n      id: prevState.id + 1,\n      value: '',\n      description: '',\n      currency: 'USD',\n      method: '',\n      tag: '',\n    }));\n  }\n\n  render() {\n    const { coinsListed, isEditing, endEditClick } = this.props;\n    const { value, description } = this.state;\n    const payMethod = ['Dinheiro', 'Cartão de crédito', 'Cartão de débito'];\n    const categoryForm = ['Alimentação', 'Lazer', 'Trabalho', 'Transporte', 'Saúde'];\n    return (\n      <form>\n        <label htmlFor=\"value\">\n          Valor:\n          <input\n            id=\"value\"\n            data-testid=\"value-input\"\n            type=\"number\"\n            name=\"value\"\n            value={ value }\n            onChange={ this.onFormChange }\n          />\n        </label>\n        <label htmlFor=\"currency\">\n          Moeda\n          <select\n            id=\"currency\"\n            data-testid=\"currency-input\"\n            name=\"currency\"\n            onChange={ this.onFormChange }\n          >\n            { coinsListed.map((coin) => (\n              <option\n                key={ coin }\n                value={ coin }\n              >\n                {coin}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"method\">\n          Método de pagamento:\n          <select\n            id=\"method\"\n            data-testid=\"method-input\"\n            name=\"method\"\n            onChange={ this.onFormChange }\n          >\n            { payMethod.map((item) => (\n              <option\n                key={ item }\n                value={ item }\n              >\n                {item}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"tag\">\n          Categoria:\n          <select\n            id=\"tag\"\n            data-testid=\"tag-input\"\n            name=\"tag\"\n            onChange={ this.onFormChange }\n          >\n            { categoryForm.map((each) => (\n              <option\n                key={ each }\n                value={ each }\n              >\n                {each}\n              </option>\n            ))}\n          </select>\n        </label>\n        <label htmlFor=\"description\">\n          Descrição:\n          <input\n            id=\"description\"\n            data-testid=\"description-input\"\n            type=\"text\"\n            name=\"description\"\n            value={ description }\n            onChange={ this.onFormChange }\n          />\n        </label>\n        { !isEditing ? (\n          <button\n            type=\"submit\"\n            name=\"button\"\n            onClick={ this.onFormButtonClick }\n          >\n            Adicionar despesa\n          </button>\n        ) : (\n          <button\n            type=\"submit\"\n            name=\"button\"\n            onClick={ (e) => endEditClick(e, this.state) }\n          >\n            Editar despesa\n          </button>\n        )}\n      </form>\n    );\n  }\n}\n\nFormInput.propTypes = {\n  dispatch: PropTypes.func.isRequired,\n  coinsListed: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  isEditing: PropTypes.bool.isRequired,\n  endEditClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  coinsListed: state.wallet.currencies,\n  prevExpenses: state.wallet.expenses,\n});\n\nexport default connect(mapStateToProps)(FormInput);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { updateExpensesAfterDelete } from '../actions/index';\n\nclass Table extends React.Component {\n  adjustCurrencyName = (name) => {\n    const newName = name.split('/');\n    const fixedName = newName[0];\n    return fixedName;\n  }\n\n  adjustValue = (value) => {\n    const fixedValue = parseFloat(value).toFixed(2);\n    return fixedValue;\n  }\n\n  adjustCurrency = (value) => {\n    const fixedCurr = (Math.round((value) * 100) / 100).toFixed(2);\n    return fixedCurr;\n  }\n\n  adjustExpenseTotal = (value, currency) => {\n    const fixedExpenseTotal = Math.round((value * currency) * 100) / 100;\n    return fixedExpenseTotal;\n  }\n\n  onDeleteButtonClick = async (e) => {\n    e.preventDefault();\n    const {\n      prevExpenses,\n      disUpdateExpensesAfterDelete,\n    } = this.props;\n    const updatedList = prevExpenses\n      .filter((expense) => expense.id !== Number(e.target.name));\n    await disUpdateExpensesAfterDelete(updatedList);\n  }\n\n  render() {\n    const {\n      prevExpenses,\n      onEditButtonClick,\n      isEditing,\n    } = this.props;\n\n    return (\n      <section>\n        <table>\n          <thead>\n            <tr>\n              <th>Descrição</th>\n              <th>Tag</th>\n              <th>Método de pagamento</th>\n              <th>Valor</th>\n              <th>Moeda</th>\n              <th>Câmbio utilizado</th>\n              <th>Valor convertido</th>\n              <th>Moeda de conversão</th>\n              <th>Editar/Excluir</th>\n            </tr>\n          </thead>\n          <tbody>\n            {prevExpenses.map((expense) => (\n              <tr key={ expense.id }>\n                <td>{ expense.description }</td>\n                <td>{ expense.tag }</td>\n                <td>{ expense.method }</td>\n                <td>{ this.adjustValue(expense.value) }</td>\n                <td>\n                  { this.adjustCurrencyName(\n                    expense.exchangeRates[expense.currency].name,\n                  ) }\n                </td>\n                <td>\n                  { this.adjustCurrency(\n                    expense.exchangeRates[expense.currency].ask,\n                  ) }\n                </td>\n                <td>\n                  { this.adjustExpenseTotal(\n                    expense.value, expense.exchangeRates[expense.currency].ask,\n                  ) }\n                </td>\n                <td>Real</td>\n                <td>\n                  { !isEditing ? (\n                    <button\n                      data-testid=\"edit-btn\"\n                      type=\"submit\"\n                      name={ expense.id }\n                      onClick={ onEditButtonClick }\n                    >\n                      Editar despesa\n                    </button>\n                  ) : (\n                    <span />\n                  )}\n                  <button\n                    data-testid=\"delete-btn\"\n                    type=\"submit\"\n                    name={ expense.id }\n                    onClick={ this.onDeleteButtonClick }\n                  >\n                    Excluir\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </section>\n    );\n  }\n}\n\nTable.propTypes = {\n  prevExpenses: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n  disUpdateExpensesAfterDelete: PropTypes.func.isRequired,\n  onEditButtonClick: PropTypes.func.isRequired,\n  isEditing: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  prevExpenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  disUpdateExpensesAfterDelete: (state) => dispatch(updateExpensesAfterDelete(state)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Table);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport FormInput from '../components/FormInput';\nimport Table from '../components/Table';\nimport { fetchCoins, updateExpensesAfterDelete } from '../actions/index';\n\nclass Wallet extends React.Component {\n  constructor(props) {\n    super(props);\n    this.updateTotalField = this.updateTotalField.bind(this);\n    this.onEditButtonClick = this.onEditButtonClick.bind(this);\n    this.endEditClick = this.endEditClick.bind(this);\n    this.state = {\n      atualCurrency: 'BRL',\n      isEditing: false,\n      whoIsEditing: null,\n      timesUpdated: false,\n    };\n  }\n\n  componentDidMount() {\n    const { disFetchCoins } = this.props;\n    disFetchCoins();\n  }\n\n  onEditButtonClick(e) {\n    e.preventDefault();\n    const { target: { name } } = e;\n    this.setState({\n      isEditing: true,\n      whoIsEditing: Number(name),\n      timesUpdated: false,\n    });\n  }\n\n  endEditClick(e, input) {\n    e.preventDefault();\n    const { prevExpenses, disUpdateExpensesAfterDelete } = this.props;\n    const { whoIsEditing } = this.state;\n    prevExpenses[whoIsEditing].value = input.value;\n    prevExpenses[whoIsEditing].currency = input.currency;\n    prevExpenses[whoIsEditing].method = input.method;\n    prevExpenses[whoIsEditing].tag = input.tag;\n    prevExpenses[whoIsEditing].description = input.description;\n    this.setState({\n      isEditing: false,\n      whoIsEditing: null,\n      timesUpdated: true,\n    });\n    disUpdateExpensesAfterDelete(prevExpenses);\n  }\n\n  updateTotalField() {\n    const { prevExpenses } = this.props;\n    const valueAdded = prevExpenses\n      .reduce((acc, cur) => acc + (cur.value * cur.exchangeRates[cur.currency].ask), 0);\n    return Math.floor((valueAdded * 100)) / 100;\n  }\n\n  render() {\n    const { emailUser } = this.props;\n    const { atualCurrency, isEditing, whoIsEditing, timesUpdated } = this.state;\n    return (\n      <main>\n        <header>\n          <h2>TrybeWallet</h2>\n          <h4 data-testid=\"email-field\">{ emailUser }</h4>\n          <h4 data-testid=\"header-currency-field\">{ atualCurrency }</h4>\n          <h4 data-testid=\"total-field\">{ this.updateTotalField() }</h4>\n        </header>\n        <FormInput\n          isEditing={ isEditing }\n          whoIsEditing={ whoIsEditing }\n          endEditClick={ this.endEditClick }\n        />\n        <Table\n          isEditing={ isEditing }\n          timesUpdated={ timesUpdated }\n          onEditButtonClick={ this.onEditButtonClick }\n        />\n      </main>\n    );\n  }\n}\n\nWallet.propTypes = {\n  emailUser: PropTypes.string.isRequired,\n  disFetchCoins: PropTypes.func.isRequired,\n  disUpdateExpensesAfterDelete: PropTypes.func.isRequired,\n  prevExpenses: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  emailUser: state.user.email,\n  prevExpenses: state.wallet.expenses,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  disUpdateExpensesAfterDelete: (state) => dispatch(updateExpensesAfterDelete(state)),\n  disFetchCoins: () => dispatch(fetchCoins()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Wallet);\n","import React from 'react';\n\nclass NotFound extends React.Component {\n  render() {\n    return <div>404 - NOT FOUND</div>;\n  }\n}\n\nexport default NotFound;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Login from './pages/Login';\nimport Wallet from './pages/Wallet';\nimport NotFound from './pages/NotFound';\nimport { updateEmail } from './actions';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onInputChange = this.onInputChange.bind(this);\n    this.validateEmail = this.validateEmail.bind(this);\n    this.loginReady = this.loginReady.bind(this);\n    this.state = {\n      emailInput: '',\n      passwordInput: '',\n      isLoginDisabled: true,\n    };\n  }\n\n  onInputChange({ target }) {\n    const { name, value } = target;\n    this.setState({ [name]: value, isLoginDisabled: true }, () => {\n      this.loginReady();\n    });\n  }\n\n  // Código extraido de https://stackoverflow.com/questions/46155/how-can-i-validate-an-email-address-in-javascript/48800#48800\n  validateEmail(email) {\n    const result = /^[^\\s@]+@[^\\s@]+\\.com/;\n    return result.test(email);\n  }\n\n  loginReady() {\n    const { emailInput, passwordInput } = this.state;\n    const MIN_LENGTH = 6;\n    if (this.validateEmail(emailInput) && passwordInput.length >= MIN_LENGTH) {\n      this.setState({ isLoginDisabled: false });\n    }\n  }\n\n  render() {\n    const {\n      emailInput,\n      passwordInput,\n      isLoginDisabled,\n    } = this.state;\n    const { DispUpdateEmail } = this.props;\n\n    return (\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={ (props) => (<Login\n            { ... props }\n            emailInput={ emailInput }\n            passwordInput={ passwordInput }\n            isLoginDisabled={ isLoginDisabled }\n            onInputChange={ this.onInputChange }\n            DispUpdateEmail={ DispUpdateEmail }\n          />) }\n        />\n        <Route exact path=\"/carteira\" component={ Wallet } />\n        <Route path=\"*\" component={ NotFound } />\n      </Switch>\n    );\n  }\n}\n\nApp.propTypes = {\n  DispUpdateEmail: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  DispUpdateEmail: (state) => dispatch(updateEmail(state)),\n});\n\nexport default connect(null, mapDispatchToProps)(App);\n","import { USER_ACTION } from '../actions/index';\n\nexport const INITIAL_STATE_USER = {\n  email: '',\n};\n\nexport const user = (state = INITIAL_STATE_USER, action) => {\n  switch (action.type) {\n  case USER_ACTION:\n    return {\n      ...state,\n      email: action.email,\n    };\n  default:\n    return state;\n  }\n};\n","import { WALLET_ACTION, FORM_ACTION, DELETE_ACTION } from '../actions/index';\n\nexport const INITIAL_STATE_WALLET = {\n  currencies: [],\n  expenses: [],\n};\n\nexport const wallet = (state = INITIAL_STATE_WALLET, action) => {\n  switch (action.type) {\n  case WALLET_ACTION:\n    return {\n      ...state,\n      currencies: [...action.payload],\n    };\n  case FORM_ACTION:\n    return {\n      ...state,\n      expenses: [...state.expenses, action.payload],\n    };\n  case DELETE_ACTION:\n    return {\n      ...state,\n      expenses: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n","import { combineReducers } from 'redux';\nimport { user } from './user';\nimport { wallet } from './wallet';\n\nexport const reducer = combineReducers({ user, wallet });\n\nexport default reducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport reducer from '../reducers/index';\n\nconst store = createStore(\n  reducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport store from './store/index';\n\nReactDOM.render(\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}